/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from 'three';
import React from 'react';
import { useLoader } from 'react-three-fiber';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';

import model from './clouds.gltf';

export default function Model(props) {
  const { type } = props;
  const { nodes, materials } = useLoader(GLTFLoader, model);
  return (
    <>
      {
        type === 0
          ? (
            <group {...props} rotation={[0, 1.57, 0]}>
              <mesh geometry={nodes.Sphere.geometry} position={[0.01, -0.05, -0.3]}>
                <meshBasicMaterial attach="material" color={materials.Clouds} transparent="true" opacity={1} />
              </mesh>
              <mesh geometry={nodes.Sphere.geometry} position={[0.02, 0.05, 0.01]}>
                <meshBasicMaterial attach="material" color={materials.Clouds} transparent="true" opacity={1} />
              </mesh>
              <mesh geometry={nodes.Sphere.geometry} position={[-0.03, 0, 0.28]}>
                <meshBasicMaterial attach="material" color={materials.Clouds} transparent="true" opacity={1} />
              </mesh>
            </group>
          )
          : (
            <group {...props} rotation={[0, 1.57, 0]}>
              <mesh geometry={nodes.Sphere.geometry} position={[0.01, 0.04, 0.01]}>
                <meshBasicMaterial attach="material" color={materials.Clouds} transparent="true" opacity={1} />
              </mesh>
              <mesh geometry={nodes.Sphere.geometry} position={[-0.02, 0, 0.2]}>
                <meshBasicMaterial attach="material" color={materials.Clouds} transparent="true" opacity={1} />
              </mesh>
            </group>
          )
      }
    </>
  );
}
